{
  "version": 3,
  "sources": ["../../src/scripts/theme/utils/init.js", "../../src/scripts/theme/store-path-url.js", "../../src/scripts/packs/customer-address-autocomplete.js"],
  "sourcesContent": ["// This script establishes a MutationObserver to detect changes in the DOM and run callbacks when changes are detected.\n// It tries to be efficient about this by establishing only one obeserver and running all callbacks once on each new node.\n// There is a limitation of this mechanism: if a node contains a script that has not before been added to the dom,\n// and it calls onDomChange, its callback won't be run against anything until the next mutation.\n// To work around this, ensure the script is loaded in the initial page load or a previous fetch.\n\nwindow.StoreConnect = window.StoreConnect || {}\nwindow.StoreConnect.ObserverCallbacks = window.StoreConnect.ObserverCallbacks || []\n\ndocument.addEventListener('DOMContentLoaded', establishObserver)\n\nexport function onDomChange(initCallback) {\n  window.StoreConnect.ObserverCallbacks.push(initCallback)\n}\n\nfunction establishObserver() {\n  if (window.StoreConnect.Observer) return\n\n  window.StoreConnect.Observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          runCallbacks(node, 'mutation')\n        }\n      })\n    })\n  })\n\n  window.StoreConnect.Observer.observe(document.body, { childList: true, subtree: true })\n\n  runCallbacks(document, 'initial load')\n}\n\nfunction runCallbacks(node, _context) {\n  window.StoreConnect.ObserverCallbacks.forEach((callback) => callback(node))\n}\n", "export default function (url) {\n  const storePath = document.querySelector('meta[name=\"sc-path\"]')\n  if (storePath) {\n    const storePathContent = storePath.content\n\n    if (storePathContent) {\n      return `/${storePathContent}${url}`\n    }\n  }\n  return url\n}\n", "import { onDomChange } from '../theme/utils/init'\nimport storePath from '../theme/store-path-url'\n\nonDomChange(init)\n\nfunction init(node) {\n  const autocomplete = node.querySelector('[data-address-autocomplete]')\n\n  if (autocomplete) {\n    const container = autocomplete.closest('[data-address-autocomplete-container]')\n    const form = autocomplete.closest('form')\n    const datalist = document.createElement('datalist')\n    datalist.id = 'autocomplete-list'\n    autocomplete.setAttribute('list', 'autocomplete-list')\n    document.body.appendChild(datalist)\n\n    autocomplete.addEventListener('input', function (event) {\n      fetch(storePath('/checkout/valid_addresses'), {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          datalist.innerHTML = ''\n          data.forEach((address) => {\n            const option = document.createElement('option')\n            option.value = address['address_1'] // Adjust according to address data structure\n            datalist.appendChild(option)\n          })\n        })\n    })\n\n    autocomplete.addEventListener('change', function (event) {\n      const address = event.target.value\n      const addressData = data.find((a) => a['address_1'] === address)\n\n      if (addressData) {\n        const addressLine1 = form.querySelector('[autocomplete~=\"address-line1\"]')\n        const addressLevel2 = form.querySelector('[autocomplete~=\"address-level2\"]')\n        const addressLevel1 = form.querySelector('[autocomplete~=\"address-level1\"]')\n        const postalCode = form.querySelector('[autocomplete~=\"postal-code\"]')\n\n        if (addressLine1) addressLine1.value = addressData['address_1']\n        if (addressLevel2) addressLevel2.value = addressData['city']\n        if (addressLevel1) addressLevel1.value = addressData['state']\n        if (postalCode) postalCode.value = addressData['postal_code']\n      }\n    })\n\n    const country_field = form.querySelector('[autocomplete~=\"country\"]')\n\n    if (country_field) {\n      country_field.addEventListener('change', (event) => {\n        const target = event.target\n\n        if (target.value === 'AU') {\n          container.classList.remove('sc-hide')\n        } else {\n          container.classList.add('sc-hide')\n        }\n      })\n      country_field.value = 'AU'\n    }\n  }\n}\n"],
  "mappings": ";;AAMA,SAAO,eAAe,OAAO,gBAAgB,CAAC;AAC9C,SAAO,aAAa,oBAAoB,OAAO,aAAa,qBAAqB,CAAC;AAElF,WAAS,iBAAiB,oBAAoB,iBAAiB;AAExD,WAAS,YAAY,cAAc;AACxC,WAAO,aAAa,kBAAkB,KAAK,YAAY;AAAA,EACzD;AAEA,WAAS,oBAAoB;AAC3B,QAAI,OAAO,aAAa,SAAU;AAElC,WAAO,aAAa,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACjE,gBAAU,QAAQ,CAAC,aAAa;AAC9B,iBAAS,WAAW,QAAQ,CAAC,SAAS;AACpC,cAAI,KAAK,aAAa,KAAK,cAAc;AACvC,yBAAa,MAAM,UAAU;AAAA,UAC/B;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAED,WAAO,aAAa,SAAS,QAAQ,SAAS,MAAM,EAAE,WAAW,MAAM,SAAS,KAAK,CAAC;AAEtF,iBAAa,UAAU,cAAc;AAAA,EACvC;AAEA,WAAS,aAAa,MAAM,UAAU;AACpC,WAAO,aAAa,kBAAkB,QAAQ,CAAC,aAAa,SAAS,IAAI,CAAC;AAAA,EAC5E;;;ACnCe,WAAR,uBAAkB,KAAK;AAC5B,UAAM,YAAY,SAAS,cAAc,sBAAsB;AAC/D,QAAI,WAAW;AACb,YAAM,mBAAmB,UAAU;AAEnC,UAAI,kBAAkB;AACpB,eAAO,IAAI,gBAAgB,GAAG,GAAG;AAAA,MACnC;AAAA,IACF;AACA,WAAO;AAAA,EACT;;;ACPA,cAAY,IAAI;AAEhB,WAAS,KAAK,MAAM;AAClB,UAAM,eAAe,KAAK,cAAc,6BAA6B;AAErE,QAAI,cAAc;AAChB,YAAM,YAAY,aAAa,QAAQ,uCAAuC;AAC9E,YAAM,OAAO,aAAa,QAAQ,MAAM;AACxC,YAAM,WAAW,SAAS,cAAc,UAAU;AAClD,eAAS,KAAK;AACd,mBAAa,aAAa,QAAQ,mBAAmB;AACrD,eAAS,KAAK,YAAY,QAAQ;AAElC,mBAAa,iBAAiB,SAAS,SAAU,OAAO;AACtD,cAAM,uBAAU,2BAA2B,GAAG;AAAA,UAC5C,QAAQ;AAAA,UACR,SAAS;AAAA,YACP,gBAAgB;AAAA,UAClB;AAAA,QACF,CAAC,EACE,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC,EAClC,KAAK,CAACA,UAAS;AACd,mBAAS,YAAY;AACrB,UAAAA,MAAK,QAAQ,CAAC,YAAY;AACxB,kBAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,mBAAO,QAAQ,QAAQ,WAAW;AAClC,qBAAS,YAAY,MAAM;AAAA,UAC7B,CAAC;AAAA,QACH,CAAC;AAAA,MACL,CAAC;AAED,mBAAa,iBAAiB,UAAU,SAAU,OAAO;AACvD,cAAM,UAAU,MAAM,OAAO;AAC7B,cAAM,cAAc,KAAK,KAAK,CAAC,MAAM,EAAE,WAAW,MAAM,OAAO;AAE/D,YAAI,aAAa;AACf,gBAAM,eAAe,KAAK,cAAc,iCAAiC;AACzE,gBAAM,gBAAgB,KAAK,cAAc,kCAAkC;AAC3E,gBAAM,gBAAgB,KAAK,cAAc,kCAAkC;AAC3E,gBAAM,aAAa,KAAK,cAAc,+BAA+B;AAErE,cAAI,aAAc,cAAa,QAAQ,YAAY,WAAW;AAC9D,cAAI,cAAe,eAAc,QAAQ,YAAY,MAAM;AAC3D,cAAI,cAAe,eAAc,QAAQ,YAAY,OAAO;AAC5D,cAAI,WAAY,YAAW,QAAQ,YAAY,aAAa;AAAA,QAC9D;AAAA,MACF,CAAC;AAED,YAAM,gBAAgB,KAAK,cAAc,2BAA2B;AAEpE,UAAI,eAAe;AACjB,sBAAc,iBAAiB,UAAU,CAAC,UAAU;AAClD,gBAAM,SAAS,MAAM;AAErB,cAAI,OAAO,UAAU,MAAM;AACzB,sBAAU,UAAU,OAAO,SAAS;AAAA,UACtC,OAAO;AACL,sBAAU,UAAU,IAAI,SAAS;AAAA,UACnC;AAAA,QACF,CAAC;AACD,sBAAc,QAAQ;AAAA,MACxB;AAAA,IACF;AAAA,EACF;",
  "names": ["data"]
}
