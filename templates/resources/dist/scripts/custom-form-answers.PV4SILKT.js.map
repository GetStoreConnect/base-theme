{
  "version": 3,
  "sources": ["../../src/scripts/theme/utils/init.js", "../../src/scripts/theme/store-path-url.js", "../../src/scripts/packs/custom-form-answers.js"],
  "sourcesContent": ["// This script establishes a MutationObserver to detect changes in the DOM and run callbacks when changes are detected.\n// It tries to be efficient about this by establishing only one obeserver and running all callbacks once on each new node.\n// There is a limitation of this mechanism: if a node contains a script that has not before been added to the dom,\n// and it calls onDomChange, its callback won't be run against anything until the next mutation.\n// To work around this, ensure the script is loaded in the initial page load or a previous fetch.\n\nwindow.StoreConnect = window.StoreConnect || {}\nwindow.StoreConnect.ObserverCallbacks = window.StoreConnect.ObserverCallbacks || []\n\ndocument.addEventListener('DOMContentLoaded', establishObserver)\n\nexport function onDomChange(initCallback) {\n  window.StoreConnect.ObserverCallbacks.push(initCallback)\n}\n\nfunction establishObserver() {\n  if (window.StoreConnect.Observer) return\n\n  window.StoreConnect.Observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          runCallbacks(node, 'mutation')\n        }\n      })\n    })\n  })\n\n  window.StoreConnect.Observer.observe(document.body, { childList: true, subtree: true })\n\n  runCallbacks(document, 'initial load')\n}\n\nfunction runCallbacks(node, _context) {\n  window.StoreConnect.ObserverCallbacks.forEach((callback) => callback(node))\n}\n", "export default function (url) {\n  const storePath = document.querySelector('meta[name=\"sc-path\"]')\n\n  if (storePath) {\n    const storePathContent = storePath.content\n\n    if (storePathContent) {\n      return `/${storePathContent}${url}`\n    }\n  }\n  return url\n}\n", "import { onDomChange } from '../theme/utils/init'\nimport storePath from '../theme/store-path-url'\n\nonDomChange(init)\n\nfunction init(node) {\n  ;[...node.querySelectorAll('[data-custom-form-answer]')].forEach((formAnswerNode) =>\n    configure(formAnswerNode)\n  )\n  ;[...node.querySelectorAll('input[type=\"file\"][data-cloudinary-upload-url]')].forEach((input) =>\n    initCloudinaryUpload(input)\n  )\n}\n\nfunction initCloudinaryUpload(input) {\n  const form = input.closest('form')\n\n  form.addEventListener('submit', submitFormWithDirectUploads)\n}\n\nfunction submitFormWithDirectUploads(event) {\n  event.preventDefault()\n  event.stopPropagation()\n\n  const form = event.target\n  const submit = form.querySelector('input[type=\"submit\"]')\n  const fileInputs = form.querySelectorAll('input[type=\"file\"][data-cloudinary-upload-url]')\n\n  let uploadPromises = []\n\n  if (submit) {\n    submit.disabled = true\n  }\n\n  fileInputs.forEach((input) => {\n    const wrapper = input.closest('[data-cloudinary-upload-wrapper]')\n    const progress = wrapper.querySelector('.SC-Progress .SC-Percentage')\n    const file = input.files[0]\n    const uploadUrl = input.dataset.cloudinaryUploadUrl\n\n    input.disabled = true\n\n    if (file && uploadUrl) {\n      progress.parentElement.classList.remove('sc-hide')\n\n      const uploadPromise = new Promise((resolve, reject) => {\n        const uploadData = new FormData()\n\n        uploadData.append('file', file)\n\n        const xhr = new XMLHttpRequest()\n\n        xhr.addEventListener('load', () => {\n          if (xhr.status === 200) {\n            const json = JSON.parse(xhr.responseText)\n\n            resolve({\n              answerField: input.dataset.answerField,\n              answerValue: json.original_filename,\n              urlField: input.dataset.urlField,\n              urlValue: json.secure_url,\n            })\n          } else {\n            reject(new Error('Upload failed'))\n          }\n        })\n        xhr.upload.addEventListener('progress', (event) => {\n          if (event.lengthComputable && progress) {\n            const percentage = Math.round((event.loaded / event.total) * 100)\n\n            progress.parentElement.classList.remove('sc-hide')\n            progress.classList.remove(...progress.classList)\n            progress.classList.add('SC-Percentage', 'SC-Percentage-' + percentage)\n          }\n        })\n\n        xhr.open('POST', input.dataset.cloudinaryUploadUrl)\n        xhr.send(uploadData)\n      })\n\n      uploadPromises.push(uploadPromise)\n    }\n  })\n\n  Promise.all(uploadPromises).then((values) => {\n    values.forEach((value) => {\n      const answerField = form.querySelector(`input[name=\"${value.answerField}\"]`)\n      const urlField = form.querySelector(`input[name=\"${value.urlField}\"]`)\n      const answerValue = value.answerValue\n      const urlValue = value.urlValue\n\n      if (answerField) {\n        answerField.value = answerValue\n      }\n      if (urlField) {\n        urlField.value = urlValue\n      }\n    })\n\n    const event = new Event('cloudinary-uploads:end', { bubbles: true })\n\n    form.dispatchEvent(event)\n\n    if (form.action) {\n      form.submit()\n    }\n  })\n}\n\nfunction configure(node) {\n  initEditLink()\n  initEditContainer()\n\n  function initEditLink() {\n    node.addEventListener('click', function (event) {\n      const { target } = event\n\n      if (target.tagName === 'A' && target.hasAttribute('data-custom-form-answer-id')) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        const answerId = target.getAttribute('data-custom-form-answer-id')\n\n        fetchForm(answerId)\n      }\n    })\n  }\n\n  function initEditContainer() {\n    node.addEventListener('cloudinary-uploads:end', function (event) {\n      if (node.querySelector('input[type=\"submit\"]')) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        submitForm()\n      }\n    })\n\n    node.addEventListener('submit', function (event) {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (node.querySelector('input[data-cloudinary-upload-url]')) {\n        return\n      }\n\n      submitForm()\n    })\n\n    node.addEventListener('change', function (event) {\n      const { target } = event\n\n      if (\n        target.tagName === 'SELECT' ||\n        (target.getAttribute('type') === 'checkbox' && !node.querySelector('input[type=\"submit\"]'))\n      ) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        const form = node.querySelector('form')\n        const data = new URLSearchParams(new FormData(form))\n        const answerId = form.getAttribute('data-custom-form-answer-id')\n\n        submitForm()\n      }\n    })\n\n    node.addEventListener('keypress', function (event) {\n      const { target } = event\n\n      if (event.key === 'Enter' && target.tagName === 'INPUT') {\n        event.preventDefault()\n        event.stopPropagation()\n\n        submitForm()\n      }\n    })\n  }\n\n  function fetchForm(answerId) {\n    fetch(storePath(`/async/custom_form_answers/${answerId}`))\n      .then((response) => response.text())\n      .then((text) => {\n        node.innerHTML = text\n      })\n  }\n\n  function submitForm() {\n    const form = node.querySelector('form')\n    const data = new URLSearchParams(new FormData(form))\n    const answerId = form.getAttribute('data-custom-form-answer-id')\n\n    fetch(storePath(`/async/custom_form_answers/${answerId}`), {\n      method: 'PUT',\n      body: data,\n    })\n      .then((response) => response.text())\n      .then((text) => {\n        node.innerHTML = text\n      })\n  }\n}\n"],
  "mappings": "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",
  "names": ["event"]
}
