{
  "version": 3,
  "sources": ["../../src/scripts/theme/utils/init.js", "../../src/scripts/packs/product-images.js"],
  "sourcesContent": ["// This script establishes a MutationObserver to detect changes in the DOM and run callbacks when changes are detected.\n// It tries to be efficient about this by establishing only one obeserver and running all callbacks once on each new node.\n// There is a limitation of this mechanism: if a node contains a script that has not before been added to the dom,\n// and it calls onDomChange, its callback won't be run against anything until the next mutation.\n// To work around this, ensure the script is loaded in the initial page load or a previous fetch.\n\nwindow.StoreConnect = window.StoreConnect || {}\nwindow.StoreConnect.ObserverCallbacks = window.StoreConnect.ObserverCallbacks || []\n\ndocument.addEventListener('DOMContentLoaded', establishObserver)\n\nexport function onDomChange(initCallback) {\n  window.StoreConnect.ObserverCallbacks.push(initCallback)\n}\n\nfunction establishObserver() {\n  if (window.StoreConnect.Observer) return\n\n  window.StoreConnect.Observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          runCallbacks(node, 'mutation')\n        }\n      })\n    })\n  })\n\n  window.StoreConnect.Observer.observe(document.body, { childList: true, subtree: true })\n\n  runCallbacks(document, 'initial load')\n}\n\nfunction runCallbacks(node, _context) {\n  window.StoreConnect.ObserverCallbacks.forEach((callback) => callback(node))\n}\n", "import { onDomChange } from '../theme/utils/init'\n\nonDomChange(init)\n\nlet currentThumbnail, mainImage, mainVideo, thumbnails\n\nfunction init(node) {\n  if (node.querySelector('[data-product-image-container]')) {\n    mainImage = document.querySelector('[data-product-image]')\n    mainVideo = document.querySelector('[data-product-video]')\n    thumbnails = document.querySelectorAll('[data-product-thumbnail]')\n\n    const container = document.querySelector('[data-product-image-container]')\n    if (container === null) return\n\n    set(thumbnails[0])\n\n    if (thumbnails.length > 1) {\n      document.querySelector('[data-product-thumbnails-container]').classList.remove('sc-hide')\n\n      for (const thumb of thumbnails) {\n        thumb.addEventListener('click', () => set(thumb))\n      }\n    }\n\n    container.addEventListener('click', (e) => {\n      if (e.target.tagName.toLowerCase() !== 'img') return\n\n      const zoomUrl = mainImage.getAttribute('data-src-zoom')\n      if (zoomUrl === null) return\n\n      window.StoreConnectUI.ProductGallery.init(zoomUrl)\n    })\n  }\n}\n\nfunction set(thumbnail) {\n  if (thumbnail === currentThumbnail) return\n\n  currentThumbnail = thumbnail\n\n  if (thumbnail.tagName.toLowerCase() == 'video') {\n    mainImage.classList.add('sc-hide')\n    transferVideoAttributes(thumbnail, mainVideo)\n    mainVideo.classList.remove('sc-hide')\n  } else {\n    mainVideo.classList.add('sc-hide')\n    transferImageAttributes(thumbnail, mainImage)\n    mainImage.classList.remove('sc-hide')\n  }\n\n  if (thumbnails.length > 0) {\n    for (const thumb of thumbnails) {\n      currentThumbnail == thumbnail\n        ? thumb.classList.add('is-active')\n        : thumb.classList.remove('is-active')\n    }\n  }\n}\n\nfunction transferImageAttributes(source, target) {\n  target.src = source.getAttribute('data-src')\n  target.alt = source.alt\n  target.setAttribute('data-product-image', source.getAttribute('data-product-thumbnail'))\n  target.setAttribute('data-src-zoom', source.getAttribute('data-src-zoom'))\n}\n\nfunction transferVideoAttributes(source, target) {\n  target.src = source.getAttribute('data-src')\n}\n"],
  "mappings": ";;AAMA,SAAO,eAAe,OAAO,gBAAgB,CAAC;AAC9C,SAAO,aAAa,oBAAoB,OAAO,aAAa,qBAAqB,CAAC;AAElF,WAAS,iBAAiB,oBAAoB,iBAAiB;AAExD,WAAS,YAAY,cAAc;AACxC,WAAO,aAAa,kBAAkB,KAAK,YAAY;AAAA,EACzD;AAEA,WAAS,oBAAoB;AAC3B,QAAI,OAAO,aAAa,SAAU;AAElC,WAAO,aAAa,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACjE,gBAAU,QAAQ,CAAC,aAAa;AAC9B,iBAAS,WAAW,QAAQ,CAAC,SAAS;AACpC,cAAI,KAAK,aAAa,KAAK,cAAc;AACvC,yBAAa,MAAM,UAAU;AAAA,UAC/B;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAED,WAAO,aAAa,SAAS,QAAQ,SAAS,MAAM,EAAE,WAAW,MAAM,SAAS,KAAK,CAAC;AAEtF,iBAAa,UAAU,cAAc;AAAA,EACvC;AAEA,WAAS,aAAa,MAAM,UAAU;AACpC,WAAO,aAAa,kBAAkB,QAAQ,CAAC,aAAa,SAAS,IAAI,CAAC;AAAA,EAC5E;;;ACjCA,cAAY,IAAI;AAEhB,MAAI;AAAJ,MAAsB;AAAtB,MAAiC;AAAjC,MAA4C;AAE5C,WAAS,KAAK,MAAM;AAClB,QAAI,KAAK,cAAc,gCAAgC,GAAG;AACxD,kBAAY,SAAS,cAAc,sBAAsB;AACzD,kBAAY,SAAS,cAAc,sBAAsB;AACzD,mBAAa,SAAS,iBAAiB,0BAA0B;AAEjE,YAAM,YAAY,SAAS,cAAc,gCAAgC;AACzE,UAAI,cAAc,KAAM;AAExB,UAAI,WAAW,CAAC,CAAC;AAEjB,UAAI,WAAW,SAAS,GAAG;AACzB,iBAAS,cAAc,qCAAqC,EAAE,UAAU,OAAO,SAAS;AAExF,mBAAW,SAAS,YAAY;AAC9B,gBAAM,iBAAiB,SAAS,MAAM,IAAI,KAAK,CAAC;AAAA,QAClD;AAAA,MACF;AAEA,gBAAU,iBAAiB,SAAS,CAAC,MAAM;AACzC,YAAI,EAAE,OAAO,QAAQ,YAAY,MAAM,MAAO;AAE9C,cAAM,UAAU,UAAU,aAAa,eAAe;AACtD,YAAI,YAAY,KAAM;AAEtB,eAAO,eAAe,eAAe,KAAK,OAAO;AAAA,MACnD,CAAC;AAAA,IACH;AAAA,EACF;AAEA,WAAS,IAAI,WAAW;AACtB,QAAI,cAAc,iBAAkB;AAEpC,uBAAmB;AAEnB,QAAI,UAAU,QAAQ,YAAY,KAAK,SAAS;AAC9C,gBAAU,UAAU,IAAI,SAAS;AACjC,8BAAwB,WAAW,SAAS;AAC5C,gBAAU,UAAU,OAAO,SAAS;AAAA,IACtC,OAAO;AACL,gBAAU,UAAU,IAAI,SAAS;AACjC,8BAAwB,WAAW,SAAS;AAC5C,gBAAU,UAAU,OAAO,SAAS;AAAA,IACtC;AAEA,QAAI,WAAW,SAAS,GAAG;AACzB,iBAAW,SAAS,YAAY;AAC9B,4BAAoB,YAChB,MAAM,UAAU,IAAI,WAAW,IAC/B,MAAM,UAAU,OAAO,WAAW;AAAA,MACxC;AAAA,IACF;AAAA,EACF;AAEA,WAAS,wBAAwB,QAAQ,QAAQ;AAC/C,WAAO,MAAM,OAAO,aAAa,UAAU;AAC3C,WAAO,MAAM,OAAO;AACpB,WAAO,aAAa,sBAAsB,OAAO,aAAa,wBAAwB,CAAC;AACvF,WAAO,aAAa,iBAAiB,OAAO,aAAa,eAAe,CAAC;AAAA,EAC3E;AAEA,WAAS,wBAAwB,QAAQ,QAAQ;AAC/C,WAAO,MAAM,OAAO,aAAa,UAAU;AAAA,EAC7C;",
  "names": []
}
