{
  "version": 3,
  "sources": ["../../src/scripts/theme/utils/init.js", "../../src/scripts/packs/product-comparison.js"],
  "sourcesContent": ["// This script establishes a MutationObserver to detect changes in the DOM and run callbacks when changes are detected.\n// It tries to be efficient about this by establishing only one obeserver and running all callbacks once on each new node.\n// There is a limitation of this mechanism: if a node contains a script that has not before been added to the dom,\n// and it calls onDomChange, its callback won't be run against anything until the next mutation.\n// To work around this, ensure the script is loaded in the initial page load or a previous fetch.\n\nwindow.StoreConnect = window.StoreConnect || {}\nwindow.StoreConnect.ObserverCallbacks = window.StoreConnect.ObserverCallbacks || []\n\ndocument.addEventListener('DOMContentLoaded', establishObserver)\n\nexport function onDomChange(initCallback) {\n  window.StoreConnect.ObserverCallbacks.push(initCallback)\n}\n\nfunction establishObserver() {\n  if (window.StoreConnect.Observer) return\n\n  window.StoreConnect.Observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          runCallbacks(node, 'mutation')\n        }\n      })\n    })\n  })\n\n  window.StoreConnect.Observer.observe(document.body, { childList: true, subtree: true })\n\n  runCallbacks(document, 'initial load')\n}\n\nfunction runCallbacks(node, _context) {\n  window.StoreConnect.ObserverCallbacks.forEach((callback) => callback(node))\n}\n", "import { onDomChange } from '../theme/utils/init'\n\nonDomChange(init)\n\nfunction init(node) {\n  let ProductComparison = []\n\n  ;[...node.querySelectorAll('[data-js-compare-add]')].forEach((element) => {\n    element.addEventListener('change', function (e) {\n      updateSelectedProducts(e.target)\n      const compareElement = document.querySelector('[data-js-compare]')\n      const compareTrigger = document.querySelector('[data-js-compare-trigger]')\n      const compareCount = document.querySelector('[data-js-compare-count]')\n\n      if (compareElement) {\n        compareElement.classList.toggle('is-hidden', noSelection())\n      }\n\n      if (compareTrigger) {\n        compareTrigger.disabled = nothingToCompare()\n      }\n\n      if (compareCount) {\n        compareCount.textContent = ProductComparison.length\n      }\n    })\n  })\n\n  const compareTrigger = node.querySelector('[data-js-compare-trigger]')\n  if (compareTrigger) {\n    compareTrigger.addEventListener('click', function (e) {\n      const category = e.target.getAttribute('data-js-compare-trigger')\n      const ids = ProductComparison\n\n      // Construct the query string with ids[]=1&ids[]=2&ids[]=3\n      const params = new URLSearchParams({ category })\n      ids.forEach((id) => params.append('ids[]', id))\n\n      fetch(`/product_comparison?${params.toString()}`, {\n        method: 'GET',\n        headers: { Accept: 'application/json' },\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          if (response.status === 'error') {\n            console.error(response.message)\n            return\n          } else {\n            if (response.html === '') {\n              console.error('No products found')\n              return\n            }\n            const screenElement = document.querySelector('[data-js-screen]')\n            const screenBody = document.querySelector('[data-js-screen-body]')\n            if (screenElement) {\n              screenElement.classList.remove('is-hidden')\n            }\n            if (screenBody) {\n              screenBody.innerHTML = response.html\n            }\n          }\n        })\n    })\n  }\n\n  const compareCancel = node.querySelector('[data-js-compare-cancel]')\n  if (compareCancel) {\n    compareCancel.addEventListener('click', () => {\n      ProductComparison = []\n      const compareElement = document.querySelector('[data-js-compare]')\n      if (compareElement) {\n        compareElement.classList.add('is-hidden')\n      }\n      document\n        .querySelectorAll('[data-js-compare-add]')\n        .forEach((element) => (element.checked = false))\n    })\n  }\n\n  const screenClose = node.querySelector('[data-js-screen-close]')\n  if (screenClose) {\n    screenClose.addEventListener('click', () => {\n      const screenElement = document.querySelector('[data-js-screen]')\n      if (screenElement) {\n        screenElement.classList.add('is-hidden')\n      }\n    })\n  }\n\n  function updateSelectedProducts(product) {\n    // Add product to state\n    if (product.checked) {\n      ProductComparison.push(product.id)\n      return\n    }\n\n    // Remove product from state\n    ProductComparison = ProductComparison.filter((productId) => productId !== product.id)\n  }\n\n  function noSelection() {\n    return ProductComparison.length < 1\n  }\n\n  function nothingToCompare() {\n    return ProductComparison.length < 2\n  }\n}\n"],
  "mappings": "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",
  "names": ["compareTrigger"]
}
