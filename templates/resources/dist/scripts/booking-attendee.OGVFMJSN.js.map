{
  "version": 3,
  "sources": ["../../src/scripts/theme/utils/init.js", "../../src/scripts/packs/booking-attendee.js"],
  "sourcesContent": ["// This script establishes a MutationObserver to detect changes in the DOM and run callbacks when changes are detected.\n// It tries to be efficient about this by establishing only one obeserver and running all callbacks once on each new node.\n// There is a limitation of this mechanism: if a node contains a script that has not before been added to the dom,\n// and it calls onDomChange, its callback won't be run against anything until the next mutation.\n// To work around this, ensure the script is loaded in the initial page load or a previous fetch.\n\nwindow.StoreConnect = window.StoreConnect || {}\nwindow.StoreConnect.ObserverCallbacks = window.StoreConnect.ObserverCallbacks || []\n\ndocument.addEventListener('DOMContentLoaded', establishObserver)\n\nexport function onDomChange(initCallback) {\n  window.StoreConnect.ObserverCallbacks.push(initCallback)\n}\n\nfunction establishObserver() {\n  if (window.StoreConnect.Observer) return\n\n  window.StoreConnect.Observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          runCallbacks(node, 'mutation')\n        }\n      })\n    })\n  })\n\n  window.StoreConnect.Observer.observe(document.body, { childList: true, subtree: true })\n\n  runCallbacks(document, 'initial load')\n}\n\nfunction runCallbacks(node, _context) {\n  window.StoreConnect.ObserverCallbacks.forEach((callback) => callback(node))\n}\n", "import { onDomChange } from '../theme/utils/init'\n\nonDomChange(init)\n\nfunction init(node) {\n  ;[...node.querySelectorAll('[data-booking-container]')].forEach((container) => start(container))\n}\n\nfunction start(node) {\n  const addAttendeeBtn = node.querySelector('[data-booking-attendee-add]')\n\n  if (addAttendeeBtn) {\n    const addForm = node.querySelector('[data-booking-attendee-form-add]')\n    const cancelAddBtn = addForm.querySelector('[data-booking-attendee-cancel]')\n\n    addAttendeeBtn.addEventListener('click', handleAddAttendee)\n    cancelAddBtn.addEventListener('click', handleCancelAdd)\n\n    listenForRadioChange(addForm)\n  }\n\n  ;[...node.querySelectorAll('[data-booking-attendee]')].forEach((node) => {\n    listenForRadioChange(node)\n    ;[...node.querySelectorAll('[data-booking-attendee-edit]')].map((btn) => {\n      btn.addEventListener('click', handleEditAttendee)\n    })\n    ;[...node.querySelectorAll('[data-booking-attendee-cancel]')].map((btn) => {\n      btn.addEventListener('click', handleCancelEdit)\n    })\n  })\n}\n\nfunction handleAddAttendee(event) {\n  const btn = event.currentTarget\n  const container = btn.closest('[data-booking-container]')\n  const addBtn = container.querySelector('[data-booking-attendee-add]')\n  const form = container.querySelector('[data-booking-attendee-form-add]')\n\n  addBtn.setAttribute('disabled', true)\n  form.classList.remove('sc-hide')\n}\n\nfunction handleCancelAdd(event) {\n  const btn = event.currentTarget\n  const container = btn.closest('[data-booking-container]')\n  const addBtn = container.querySelector('[data-booking-attendee-add]')\n  const form = container.querySelector('[data-booking-attendee-form-add]')\n\n  addBtn.removeAttribute('disabled')\n  form.classList.add('sc-hide')\n}\n\nfunction handleEditAttendee(event) {\n  const attendee = event.currentTarget.closest('[data-booking-attendee]')\n  const attendeeForm = attendee.querySelector('[data-booking-attendee-form-edit]')\n  const attendeeCard = attendee.querySelector('[data-booking-attendee-card]')\n  const container = attendee.closest('[data-booking-container]')\n  const forms = container.querySelectorAll('[data-booking-attendee-form-edit]')\n  const cards = container.querySelectorAll('[data-booking-attendee-card]')\n\n  ;[...cards].map((card) => {\n    card === attendeeCard ? card.classList.add('sc-hide') : card.classList.remove('sc-hide')\n  })\n  ;[...forms].map((form) => {\n    form === attendeeForm ? form.classList.remove('sc-hide') : form.classList.add('sc-hide')\n  })\n}\n\nfunction handleCancelEdit(event) {\n  const container = event.currentTarget.closest('[data-booking-attendee]')\n  const form = container.querySelector('[data-booking-attendee-form-edit]')\n  const card = container.querySelector('[data-booking-attendee-card]')\n  const addBtn = container\n    .closest('[data-booking-container]')\n    .querySelector('[data-booking-attendee-add]')\n\n  card.classList.remove('sc-hide')\n  form.classList.add('sc-hide')\n}\n\nfunction listenForRadioChange(node) {\n  const radios = node.querySelectorAll('[data-booking-is-contact]')\n  const fields = node.querySelector('[data-booking-attendee-fields]')\n  const inputs = node.querySelectorAll('[data-booking-attendee-input]')\n\n  ;[...radios].forEach((radio) => {\n    radio.addEventListener('click', (event) => {\n      if (event.currentTarget.value === 'true') {\n        fields.classList.add('sc-hide')\n        ;[...inputs].map((input) => input.setAttribute('value', ''))\n      } else {\n        fields.classList.remove('sc-hide')\n      }\n    })\n\n    if (!!radio['checked']) {\n      radio.click()\n    }\n  })\n}\n"],
  "mappings": "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",
  "names": ["node"]
}
