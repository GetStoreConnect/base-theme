{
  "version": 3,
  "sources": ["../../src/scripts/theme/utils/fetch.js", "../../src/scripts/theme/store-path-url.js", "../../src/scripts/theme/utils/init.js", "../../src/scripts/packs/customer-address.js"],
  "sourcesContent": ["export default function fetchWithResponseHandler(url, options) {\n  const method = options.method ? options.method.toUpperCase() : 'GET'\n\n  if (method !== 'GET' && method !== 'HEAD') {\n    const tag = document.querySelector('meta[name=\"csrf-token\"]')\n    const csrfToken = tag\n      ? document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n      : ''\n    options.headers = {\n      ...options.headers,\n      'X-CSRF-Token': csrfToken,\n    }\n  }\n\n  return fetch(url, options).then((response) => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok: ' + response.statusText)\n    }\n\n    const contentType = response.headers.get('Content-Type')\n\n    if (contentType.includes('application/json')) {\n      return response.json()\n    } else if (contentType.includes('text/javascript')) {\n      return response.text().then((script) => (0, eval)(script))\n    } else if (contentType.includes('text/html')) {\n      return response.text()\n    } else {\n      return response.blob()\n    }\n  })\n}\n", "export default function (url) {\n  const storePath = document.querySelector('meta[name=\"sc-path\"]')\n  if (storePath) {\n    const storePathContent = storePath.content\n\n    if (storePathContent) {\n      return `/${storePathContent}${url}`\n    }\n  }\n  return url\n}\n", "// This script establishes a MutationObserver to detect changes in the DOM and run callbacks when changes are detected.\n// It tries to be efficient about this by establishing only one obeserver and running all callbacks once on each new node.\n// There is a limitation of this mechanism: if a node contains a script that has not before been added to the dom,\n// and it calls onDomChange, its callback won't be run against anything until the next mutation.\n// To work around this, ensure the script is loaded in the initial page load or a previous fetch.\n\nwindow.StoreConnect = window.StoreConnect || {}\nwindow.StoreConnect.ObserverCallbacks = window.StoreConnect.ObserverCallbacks || []\n\ndocument.addEventListener('DOMContentLoaded', establishObserver)\n\nexport function onDomChange(initCallback) {\n  window.StoreConnect.ObserverCallbacks.push(initCallback)\n}\n\nfunction establishObserver() {\n  if (window.StoreConnect.Observer) return\n\n  window.StoreConnect.Observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n          runCallbacks(node, 'mutation')\n        }\n      })\n    })\n  })\n\n  window.StoreConnect.Observer.observe(document.body, { childList: true, subtree: true })\n\n  runCallbacks(document, 'initial load')\n}\n\nfunction runCallbacks(node, _context) {\n  window.StoreConnect.ObserverCallbacks.forEach((callback) => callback(node))\n}\n", "import fetchWithResponseHandler from '../theme/utils/fetch'\nimport storePath from '../theme/store-path-url'\nimport { onDomChange } from '../theme/utils/init'\n\nonDomChange(init)\n\nfunction init(node) {\n  ;[...node.querySelectorAll('[data-checkout-address-container]')].forEach((element) => {\n    configure(element)\n  })\n}\n\nfunction configure(element) {\n  const country_select = document.getElementById(element.getAttribute('data-country-id'))\n  const state_id = element.getAttribute('data-state-id')\n  const address_type = element.getAttribute('data-address-type')\n  const billing_same_as_shipping_element = document.getElementById(\n    element.getAttribute('data-billing-same-id')\n  )\n\n  if (country_select) {\n    updateStates(country_select.value)\n\n    country_select.addEventListener('change', function (event) {\n      const countryId = event.target.value\n      updateStates(countryId)\n      updateRequired(countryId)\n    })\n  }\n\n  if (billing_same_as_shipping_element) {\n    billing_same_as_shipping_element.addEventListener('change', () => {\n      if (country_select) {\n        updateRequired(country_select.value)\n      }\n    })\n  }\n\n  if (country_select) {\n    updateRequired(country_select.value)\n  }\n\n  function billing_same_as_shipping() {\n    return billing_same_as_shipping_element ? billing_same_as_shipping_element.checked : false\n  }\n\n  function updateRequiredFields(fields) {\n    ;[\n      ...document.querySelectorAll(\n        '[data-required-fields-form] input, [data-required-fields-form] select'\n      ),\n    ].forEach((input) => {\n      const name = input.name\n      if (name && input.name.includes(address_type)) {\n        let required = fields.includes(name)\n        if (address_type === 'billing' && billing_same_as_shipping()) {\n          required = false\n        }\n\n        // If name=shipping_address_lines[] then only check if first one is required\n        if (name.includes('address_lines')) {\n          const form = input.form\n          const index = Array.from(form.querySelectorAll(`input[name=\"${input.name}\"]`)).indexOf(\n            input\n          )\n          if (index === 0) {\n            required = fields.includes(name.replace(`[]`, ``))\n          }\n        }\n\n        if (required) {\n          input.required = true\n          input.dataset.required = true\n          if (input.labels) {\n            input.labels.forEach((label) => {\n              label.dataset.required = true\n            })\n          }\n        } else {\n          input.required = false\n          delete input.dataset.required\n          if (input.labels) {\n            input.labels.forEach((label) => {\n              delete label.dataset.required\n            })\n          }\n        }\n      }\n    })\n  }\n\n  function updateRequired(country_id) {\n    fetchWithResponseHandler(storePath('/checkout/required_fields'), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        country_id: country_id,\n        billing_same_as_shipping: billing_same_as_shipping(),\n      }).toString(),\n    })\n      .then((data) => {\n        updateRequiredFields(data)\n      })\n      .catch((error) => {\n        console.error('Error updating required fields:', error)\n      })\n  }\n\n  function updateStates(id) {\n    if (id === '') {\n      return false\n    }\n\n    fetchWithResponseHandler(storePath('/checkout/find_states'), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({ country_id: id }).toString(),\n    })\n      .then((data) => {\n        buildStatesDropdown(data)\n      })\n      .catch((error) => {\n        console.error('Error updating states:', error)\n      })\n  }\n\n  function buildStatesDropdown(data) {\n    const state = document.getElementById(state_id)\n    if (state) {\n      const selected_value = state.getAttribute('data-selected')\n\n      state.options.length = 0\n      data.unshift(['', state.getAttribute('placeholder')])\n\n      data.forEach((element) => {\n        const newOption = document.createElement('option')\n        const optionText = document.createTextNode(element[1])\n        newOption.appendChild(optionText)\n        newOption.setAttribute('value', element[0])\n        if (element[0] === selected_value) {\n          newOption.setAttribute('selected', true)\n        }\n        state.appendChild(newOption)\n      })\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["element"]
}
