{
  "version": 3,
  "sources": ["../../src/scripts/theme/store-path-url.js", "../../src/scripts/theme/utils/fetch.js", "../../src/scripts/packs/metadata.js"],
  "sourcesContent": ["export default function (url) {\n  const storePath = document.querySelector('meta[name=\"sc-path\"]')\n\n  if (storePath) {\n    const storePathContent = storePath.content\n\n    if (storePathContent) {\n      return `/${storePathContent}${url}`\n    }\n  }\n  return url\n}\n", "export default function fetchWithResponseHandler(url, options) {\n  const method = options.method ? options.method.toUpperCase() : 'GET'\n\n  if (method !== 'GET' && method !== 'HEAD') {\n    const tag = document.querySelector('meta[name=\"csrf-token\"]')\n    const csrfToken = tag\n      ? document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n      : ''\n    options.headers = {\n      ...options.headers,\n      'X-CSRF-Token': csrfToken,\n    }\n  }\n\n  return fetch(url, options).then((response) => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok: ' + response.statusText)\n    }\n\n    const contentType = response.headers.get('Content-Type')\n\n    if (contentType.includes('application/json')) {\n      return response.json()\n    } else if (contentType.includes('text/javascript')) {\n      return response.text().then((script) => (0, eval)(script))\n    } else if (contentType.includes('text/html')) {\n      return response.text()\n    } else {\n      return response.blob()\n    }\n  })\n}\n", "import storePathUrl from '../theme/store-path-url'\nimport fetchWithResponseHandler from '../theme/utils/fetch'\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (document.querySelector('body[data-customer-metadata]')) {\n    const data = {\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      language: window.navigator.language,\n      screen_resolution: `${window.screen.width * window.devicePixelRatio} X ${window.screen.height * window.devicePixelRatio}`,\n    }\n\n    fetchWithResponseHandler(storePathUrl('/cart/customer_metadata'), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams(data).toString(),\n    }).then((_response) => {\n      document.body.removeAttribute('data-customer-metadata')\n    })\n  }\n})\n"],
  "mappings": ";;AAAe,WAAR,uBAAkB,KAAK;AAC5B,UAAM,YAAY,SAAS,cAAc,sBAAsB;AAE/D,QAAI,WAAW;AACb,YAAM,mBAAmB,UAAU;AAEnC,UAAI,kBAAkB;AACpB,eAAO,IAAI,gBAAgB,GAAG,GAAG;AAAA,MACnC;AAAA,IACF;AACA,WAAO;AAAA,EACT;;;ACXe,WAAR,yBAA0C,KAAK,SAAS;AAC7D,UAAM,SAAS,QAAQ,SAAS,QAAQ,OAAO,YAAY,IAAI;AAE/D,QAAI,WAAW,SAAS,WAAW,QAAQ;AACzC,YAAM,MAAM,SAAS,cAAc,yBAAyB;AAC5D,YAAM,YAAY,MACd,SAAS,cAAc,yBAAyB,EAAE,aAAa,SAAS,IACxE;AACJ,cAAQ,UAAU;AAAA,QAChB,GAAG,QAAQ;AAAA,QACX,gBAAgB;AAAA,MAClB;AAAA,IACF;AAEA,WAAO,MAAM,KAAK,OAAO,EAAE,KAAK,CAAC,aAAa;AAC5C,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,IAAI,MAAM,kCAAkC,SAAS,UAAU;AAAA,MACvE;AAEA,YAAM,cAAc,SAAS,QAAQ,IAAI,cAAc;AAEvD,UAAI,YAAY,SAAS,kBAAkB,GAAG;AAC5C,eAAO,SAAS,KAAK;AAAA,MACvB,WAAW,YAAY,SAAS,iBAAiB,GAAG;AAClD,eAAO,SAAS,KAAK,EAAE,KAAK,CAAC,YAAY,GAAG,MAAM,MAAM,CAAC;AAAA,MAC3D,WAAW,YAAY,SAAS,WAAW,GAAG;AAC5C,eAAO,SAAS,KAAK;AAAA,MACvB,OAAO;AACL,eAAO,SAAS,KAAK;AAAA,MACvB;AAAA,IACF,CAAC;AAAA,EACH;;;AC5BA,WAAS,iBAAiB,oBAAoB,WAAY;AACxD,QAAI,SAAS,cAAc,8BAA8B,GAAG;AAC1D,YAAM,OAAO;AAAA,QACX,UAAU,KAAK,eAAe,EAAE,gBAAgB,EAAE;AAAA,QAClD,UAAU,OAAO,UAAU;AAAA,QAC3B,mBAAmB,GAAG,OAAO,OAAO,QAAQ,OAAO,gBAAgB,MAAM,OAAO,OAAO,SAAS,OAAO,gBAAgB;AAAA,MACzH;AAEA,+BAAyB,uBAAa,yBAAyB,GAAG;AAAA,QAChE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM,IAAI,gBAAgB,IAAI,EAAE,SAAS;AAAA,MAC3C,CAAC,EAAE,KAAK,CAAC,cAAc;AACrB,iBAAS,KAAK,gBAAgB,wBAAwB;AAAA,MACxD,CAAC;AAAA,IACH;AAAA,EACF,CAAC;",
  "names": []
}
