import Language from '../../../../language/Language';
import { AddressModeOptions, CardInputProps, LayoutObj } from './types';
import { AddressSpecifications, StringObject } from '../../../internal/Address/types';
import { InstallmentsObj } from './components/Installments/Installments';
import { SFPProps } from '../../../internal/SecuredFields/SFP/types';
import { UseImageHookType } from '../../../../core/Context/useImage';
export declare const getCardImageUrl: (brand: string, getImage: UseImageHookType) => string;
/**
 * Verifies that installment object is valid to send to the Backend.
 * Valid means that it has 'revolving' plan set, or the number of installments is bigger than one
 */
export declare const hasValidInstallmentsObject: (installments?: InstallmentsObj) => boolean;
export declare const getLayout: ({ props, showKCP, showBrazilianSSN, countrySpecificSchemas, billingAddressRequiredFields }: LayoutObj) => string[];
/**
 * Lookup service to map local (CardInput) field refs to a key, possibly region specific, by which to retrieve the translation
 */
export declare const mapFieldKey: (key: string, i18n: Language, countrySpecificLabels: StringObject) => string;
export declare const extractPropsForCardFields: (props: CardInputProps) => {
    amount: import("../../../../types").PaymentAmount;
    billingAddressRequired: boolean;
    billingAddressRequiredFields: string[];
    billingAddressAllowedCountries: string[];
    brandsConfiguration: import("../../types").CardBrandsConfiguration;
    enableStoreDetails: boolean;
    hasCVC: boolean;
    hasHolderName: boolean;
    holderNameRequired: boolean;
    installmentOptions: import("./components/types").InstallmentOptions;
    placeholders: {
        holderName?: string;
    };
    positionHolderNameOnTop: boolean;
    showBrandIcon: boolean;
    showBrandsUnderCardNumber: boolean;
    lastFour: string;
    expiryMonth: string;
    expiryYear: string;
    disclaimerMessage: import("../../../internal/DisclaimerMessage/DisclaimerMessage").DisclaimerMsgObject;
};
export declare const extractPropsForSFP: (props: CardInputProps) => SFPProps;
export declare const handlePartialAddressMode: (addressMode: AddressModeOptions) => AddressSpecifications | null;
export declare function lookupBlurBasedErrors(errorCode: any): boolean;
export declare function getFullBrandName(brand: any): any;
