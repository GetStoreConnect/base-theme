/**
 * Make an array of encrypted field names based on the value of the 'data-cse' attribute of elements in the rootNode
 */
export declare const getFields: (rootNode: any) => any;
/**
 * If, visually, we're dealing with a single date field (expiryDate) we still need separate entries
 * for expiryMonth & expiryYear - since that is how the values will be delivered from securedFields
 */
export declare const validFieldsReducer: (acc: any, cur: any) => any;
export declare const getErrorReducer: (numDateFields: any, state: any) => (acc: any, field: any) => any;
/**
 * Create an object suitable for sending to our handleOnError function
 */
export declare const getErrorObject: (fieldType: any, rootNode: any, state: any) => {
    rootNode: any;
    fieldType: any;
    error: any;
    type: string;
};
