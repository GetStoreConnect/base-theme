import { h } from 'preact';
export declare const CardFieldsWrapper: ({ data, valid, errors, handleChangeFor, sfpState, setFocusOn, cvcPolicy, focusedElement, hasInstallments, handleInstallments, showAmountsInInstallments, brandsIcons, formData, formErrors, formValid, expiryDatePolicy, dualBrandSelectElements, extensions, selectedBrandValue, showKCP, showBrazilianSSN, socialSecurityNumber, handleOnStoreDetails, billingAddress, handleAddress, setAddressRef, partialAddressSchema, onAddressLookup, onAddressSelected, addressSearchDebounceMs, amount, billingAddressRequired, billingAddressRequiredFields, billingAddressAllowedCountries, billingAddressValidationRules, brandsConfiguration, enableStoreDetails, hasCVC, hasHolderName, holderNameRequired, installmentOptions, placeholders, positionHolderNameOnTop, showBrandIcon, showBrandsUnderCardNumber, iOSFocusedField, disclaimerMessage }: {
    data: any;
    valid: any;
    errors: any;
    handleChangeFor: any;
    sfpState: any;
    setFocusOn: any;
    cvcPolicy: any;
    focusedElement: any;
    hasInstallments: any;
    handleInstallments: any;
    showAmountsInInstallments: any;
    brandsIcons: any;
    formData: any;
    formErrors: any;
    formValid: any;
    expiryDatePolicy: any;
    dualBrandSelectElements: any;
    extensions: any;
    selectedBrandValue: any;
    showKCP: any;
    showBrazilianSSN: any;
    socialSecurityNumber: any;
    handleOnStoreDetails: any;
    billingAddress: any;
    handleAddress: any;
    setAddressRef: any;
    partialAddressSchema: any;
    onAddressLookup: any;
    onAddressSelected: any;
    addressSearchDebounceMs: any;
    amount: any;
    billingAddressRequired: any;
    billingAddressRequiredFields: any;
    billingAddressAllowedCountries: any;
    billingAddressValidationRules?: any;
    brandsConfiguration: any;
    enableStoreDetails: any;
    hasCVC: any;
    hasHolderName: any;
    holderNameRequired: any;
    installmentOptions: any;
    placeholders: any;
    positionHolderNameOnTop: any;
    showBrandIcon: any;
    showBrandsUnderCardNumber: any;
    iOSFocusedField: any;
    disclaimerMessage: any;
}) => h.JSX.Element;
