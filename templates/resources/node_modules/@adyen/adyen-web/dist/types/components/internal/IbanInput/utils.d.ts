/**
 * Parse the BBAN structure used to configure each IBAN __specification and returns a matching regular expression.
 * A structure is composed of blocks of 3 characters (one letter and 2 digits). Each block represents
 * a logical group in the typical representation of the BBAN. For each group, the letter indicates which characters
 * are allowed in this group and the following 2-digits number tells the length of the group.
 *
 * @param structure - the structure to parse
 * @param countryCode - the countryCode to check format against
 *
 * @internal
 */
export declare const parseStructure: (structure: any, countryCode: any) => false | RegExp;
/**
 * @internal
 */
export declare const formatIban: (iban: any) => any;
export type ElectronicFormat = string;
/**
 * Returns any non alphanumeric characters and uppercases them
 *
 * @internal
 */
export declare const electronicFormat: (iban: string) => ElectronicFormat;
/**
 * Lazy-loaded regex (parse the structure and construct the regular expression the first time we need it for validation)
 *
 * @internal
 */
export declare const regex: (iban: any, countryCode: any) => false | RegExp;
/**
 * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to
 * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.
 * @param ibanInput - The IBAN value
 * @returns The prepared IBAN
 *
 * @internal
 */
export declare const iso13616Prepare: (ibanInput: any) => any;
/**
 * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.
 *
 * @param iban -
 *
 * @internal
 */
export declare const iso7064Mod97_10: (iban: any) => number;
/**
 *  @param countryCode -
 *  @returns Example of IBAN Number
 */
export declare const getIbanPlaceHolder: (countryCode?: any) => any;
export declare const getIbanCountrySpecification: (countryCode: any) => any;
/**
 *  @param cursor -
 *  @param iban -
 *  @param previousIban -
 *  @returns new cursor position
 */
export declare const getNextCursorPosition: (cursor: any, iban: any, previousIban: any) => any;
/**
 * @param electronicFormatIban -
 * @returns countryCode string
 */
export declare const getCountryCode: (electronicFormatIban: ElectronicFormat) => string;
