import { h } from 'preact';
import Language from '../../../language/Language';
import { CardBrandsConfiguration } from '../../Card/types';
import { StylesObject } from '../../internal/SecuredFields/lib/types';
import { Resources } from '../../../core/Context/Resources';
interface SecuredFieldsProps {
    allowedDOMAccess?: boolean;
    autoFocus?: boolean;
    brands?: string[];
    brandsConfiguration?: CardBrandsConfiguration;
    clientKey?: string;
    countryCode?: string;
    i18n: Language;
    implementationType?: string;
    keypadFix?: boolean;
    loadingContext?: string;
    legacyInputMode?: boolean;
    minimumExpiryDate?: string;
    onAdditionalSFConfig?: () => {};
    onAdditionalSFRemoved?: () => {};
    onAllValid?: () => {};
    onAutoComplete?: () => {};
    onBinValue?: () => {};
    onBrand?: () => {};
    onConfigSuccess?: () => {};
    onChange: (data: any) => void;
    onError?: () => {};
    onFieldValid?: () => {};
    onFocus?: (e: any) => {};
    onLoad?: () => {};
    rootNode: HTMLElement;
    resources: Resources;
    showWarnings?: boolean;
    styles?: StylesObject;
    trimTrailingSeparator?: boolean;
    type: string;
}
declare function SecuredFieldsInput(props: SecuredFieldsProps): h.JSX.Element;
declare namespace SecuredFieldsInput {
    var defaultProps: {
        onChange: () => void;
        onError: () => void;
    };
}
export default SecuredFieldsInput;
