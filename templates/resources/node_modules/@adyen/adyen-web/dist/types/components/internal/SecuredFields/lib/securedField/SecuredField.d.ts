import AbstractSecuredField, { SecuredFieldInitObj } from './AbstractSecuredField';
import { CVCPolicyType, DatePolicyType, RtnType_noParamVoidFn, RtnType_postMessageListener, RtnType_callbackFn } from '../types';
import Language from '../../../../../language/Language';
import './SecuredField.scss';
declare class SecuredField extends AbstractSecuredField {
    constructor(pSetupObj: SecuredFieldInitObj, i18n: Language);
    init(i18n: Language): SecuredField;
    iframeOnLoadListenerFn(): void;
    postMessageListenerFn(event: MessageEvent): void;
    destroy(): void;
    /**
     * Returns whether the securedField is hidden OR whether it is optional and not in error
     */
    isOptionalOrHidden(): boolean;
    onIframeLoaded(callbackFn: RtnType_noParamVoidFn): SecuredField;
    onEncryption(callbackFn: RtnType_callbackFn): SecuredField;
    onValidation(callbackFn: RtnType_callbackFn): SecuredField;
    onConfig(callbackFn: RtnType_callbackFn): SecuredField;
    onFocus(callbackFn: RtnType_callbackFn): SecuredField;
    onBinValue(callbackFn: RtnType_callbackFn): SecuredField;
    onTouchstart(callbackFn: RtnType_callbackFn): SecuredField;
    onShiftTab(callbackFn: RtnType_callbackFn): SecuredField;
    onAutoComplete(callbackFn: RtnType_callbackFn): SecuredField;
    get errorType(): string;
    set errorType(value: string);
    get hasError(): boolean;
    set hasError(value: boolean);
    get isValid(): boolean;
    set isValid(value: boolean);
    get cvcPolicy(): CVCPolicyType;
    set cvcPolicy(value: CVCPolicyType);
    get expiryDatePolicy(): DatePolicyType;
    set expiryDatePolicy(value: DatePolicyType);
    get iframeContentWindow(): Window;
    set iframeContentWindow(value: Window);
    get isEncrypted(): boolean;
    set isEncrypted(value: boolean);
    get numKey(): number;
    set numKey(value: number);
    get iframeOnLoadListener(): RtnType_noParamVoidFn;
    set iframeOnLoadListener(value: RtnType_noParamVoidFn);
    get postMessageListener(): RtnType_postMessageListener;
    set postMessageListener(value: RtnType_postMessageListener);
}
export default SecuredField;
