import { Component } from 'preact';
import { DropinComponentProps, DropinComponentState, DropinStatusProps } from '../types';
import './DropinComponent.scss';
import { UIElementStatus } from '../../types';
export declare class DropinComponent extends Component<DropinComponentProps, DropinComponentState> {
    state: DropinComponentState;
    componentDidMount(): void;
    prepareDropinData: () => void;
    setStatus: (status: UIElementStatus, props?: DropinStatusProps) => void;
    private setActivePaymentMethod;
    componentDidUpdate(prevProps: any, prevState: any): void;
    private handleOnSelectPaymentMethod;
    private handleDisableStoredPaymentMethod;
    closeActivePaymentMethod(): void;
    /**
     * getOnOrderCancel decides which onOrderCancel logic should be used, manual or sessions
     */
    private getOnOrderCancel;
    private onOrderCancel;
    render(props: any, { elements, instantPaymentElements, status, activePaymentMethod, cachedPaymentMethods }: {
        elements: any;
        instantPaymentElements: any;
        status: any;
        activePaymentMethod: any;
        cachedPaymentMethods: any;
    }): any;
}
export default DropinComponent;
