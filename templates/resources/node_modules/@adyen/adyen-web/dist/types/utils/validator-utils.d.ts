import { CountryFormatRules } from './Validator/types';
export declare const getMaxLengthByFieldAndCountry: (formattingRules: CountryFormatRules, field: string, country: string, ignoreIfFormatterExists: boolean) => number | null;
export declare const isEmpty: (input: any) => boolean;
export declare const isString: (input: any) => boolean;
export declare const hasText: (input: any) => boolean;
export declare const SPECIAL_CHARS = "?\\+_=!@#$%^&*(){}~<>\\[\\]\\/\\\\";
export declare const getFormattingRegEx: (specChars: string, flags?: string) => RegExp;
export declare const getValidatingRegEx: (specChars: string, exclude: boolean) => RegExp;
export declare const CHARACTER_PATTERNS: {
    [key: string]: RegExp;
};
export declare const exactLength: (input: string, length: number) => boolean;
export declare const validateForSpecialChars: (name: any) => boolean;
export declare const trimValWithOneSpace: (val: string) => string;
